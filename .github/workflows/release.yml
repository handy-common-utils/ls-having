name: Release

on:
  push:
    # run only against version tags
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.3'
          cache: true
      - run: go build
      - run: go test -cover -v
  goreleaser:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.3'
          cache: true
      # More assembly might be required: Docker logins, GPG, etc. It all depends
      # on your needs.
      - uses: goreleaser/goreleaser-action@v3
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro':
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.LSH_GO_RELEASE_PAT }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro'
          # distribution:
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  snapcraft:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
    - uses: snapcore/action-build@v1
      id: build
    - uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
      with:
        snap: ${{ steps.build.outputs.snap }}
        release: stable
  publish-go-module:
    needs: [goreleaser, snapcraft]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.3'
          cache: true
      - run: |
          NEW_TAG="v$(git describe HEAD --tags --abbrev=0)"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          GOPROXY=proxy.golang.org go list -m "github.com/handy-common-utils/ls-having@$NEW_TAG"
          curl -s "https://proxy.golang.org/github.com/handy-common-utils/ls-having/@v/$NEW_TAG.info"