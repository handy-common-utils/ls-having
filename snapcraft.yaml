name: ls-having
summary: List directories having specified flag files and meeting other conditions. 
description: |
  This is a tool that can list directories having specified flag files and optionally meeting other specified conditions.
  It is handy for developers maintaining mono repos that have multiple projects in each repo,
  and also suitable for CI/CD use cases.
  It is quick and small. Pre-built binaries are available for Linux, MacOS, and Windows.

  **Home page**: https://github.com/handy-common-utils/ls-having

  To install for MacOS, try `brew install handy-common-utils/tap/ls-having`.
  To download executables (including `ls-having.exe`) directly, visit: https://github.com/handy-common-utils/ls-having/releases

  **Usage**

      Usage: ls-having -f name-or-glob [options] [root-dir]
      Options:
        -c, --check-file name          name of the additional file to check
        -i, --check-inverse            regard regular expression not matching as positive
        -e, --check-regexp expression  regular expression for testing the content of the check file (default ".*")
        -d, --depth int                how deep to look into subdirectories, 0 means only look at root directory, -1 means no limit (default 5)
        -r, --error string             how to handle errors such like non-existing directory, no access permission, etc. (ignore|panic|print) (default "ignore")
        -x, --exclude glob             glob of the directories to exclude, this option can appear multiple times
        -f, --flag-file glob           name or glob of the flag file, this option can appear multiple times
        -h, --help                     show help information
        -n, --no-default-excludes      don't apply default excludes
        -0, --print0                   separate paths in the output with null characters (instead of newline characters)
        -s, --subdirectories-only      don't return root directory even if it meets conditions
      References:
        Glob syntax: https://github.com/gobwas/glob#example
        Regexp syntax: https://pkg.go.dev/regexp/syntax
        Home page: https://github.com/handy-common-utils/ls-having 

  **Examples**

  Find all directories in `./` having `package.json` file,
  and run `npm audit fix` in them one by one:

  `ls-having -f package.json | xargs -I {} bash -c 'cd "{}"; npm audit fix'`

  Find all directories in `./` having `package.json` file
  and the `package.json` file does not contain `"volta":`:

  `ls-having -c package.json -i -e '"volta":'`

  Find all directories in `./` having `cdk.json` file
  and the `package.json` file in the directory has `mocha` specified as a dependency,
  then for each of those directories reinstall latest version of `mocha` as dev-dependency:

  `ls-having -f cdk.json -c package.json -e '"dependencies":\s*{[^{}]*"mocha":' | xargs -I {} bash -c 'cd {}; npm i -D mocha@latest'`

  Find all directories in `~/myrepo1` having `build.gradle` file and a sibling directory `australia`:

  `ls-having -f build.gradle -c ../australia ~/myrepo1`
version: git
grade: stable
base: core20

confinement: strict

apps:
  ls-having:
    command: bin/ls-having
    plugs:
      - home
parts:
  ls-having:
    plugin: go
    source-type: local
    source: .